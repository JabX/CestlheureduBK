@rendermode InteractiveWebAssembly

@foreach (var snack in MainData)
{
    <br />
    <RadzenText Text="@snack.Name" TextStyle="TextStyle.DisplayH6" />

    <RadzenDataGrid Data="@snack.Products">
        <Columns>
            <RadzenDataGridColumn Title="Produit">
                <Template Context="data">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
                        <img src="@data.Image" class="image" />
                        <span>@data.Name</span>
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Amount" HeaderCssClass="col-1">
                <HeaderTemplate>
                    <span class="header" @onclick="@(() => ToggleSort("amount"))">
                        <span>Qté</span>
                        @if (sortBy == "amount")
                        {
                            <RadzenIcon Icon="@(asc ? "arrow_drop_up" : "arrow_drop_down")" />
                        }
                    </span>
                </HeaderTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn HeaderCssClass="col-4">
                <HeaderTemplate>
                    <span class="header" @onclick="@(() => ToggleSort("price"))">
                        <span>Prix</span>
                        @if (sortBy == "price")
                        {
                            <RadzenIcon Icon="@(asc ? "arrow_drop_up" : "arrow_drop_down")" />
                        }
                    </span>
                </HeaderTemplate>
                <Template Context="data">
                    <RadzenStack AlignItems="AlignItems.Start" Gap="0">
                        <span>@data.Price.ToString("0.00 €")</span>
                        @if (data.Ratio < 1)
                        {
                            <span class="detail">compté @((data.Price * data.Ratio).ToString("0.00 €"))</span>
                        }
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn HeaderCssClass="col-2">
                <HeaderTemplate>
                    <span class="header" @onclick="@(() => ToggleSort("value"))">
                        <span>Unité</span>
                        @if (sortBy == "value")
                        {
                            <RadzenIcon Icon="@(asc ? "arrow_drop_up" : "arrow_drop_down")" />
                        }
                    </span>
                </HeaderTemplate>
                <Template Context="data">
                    @data.Value.ToString("0.00 €")
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {
    [Parameter]
    public required SnackDisplay[] Data { get; set; }

    private string sortBy = "value";
    private bool asc = true;

    private SnackDisplay[] MainData
    {
        get
        {
            return Data.Select(d => d with
                {
                    Products = ((sortBy, asc) switch
                    {
                        ("amount", false) => d.Products.OrderByDescending(off => off.Amount).ThenByDescending(off => off.Price),
                        ("amount", true) => d.Products.OrderBy(off => off.Amount).ThenBy(off => off.Price),
                        ("price", false) => d.Products.OrderByDescending(off => off.Price).ThenBy(off => off.Value),
                        ("price", true) => d.Products.OrderBy(off => off.Price).ThenBy(off => off.Value),
                        ("value", false) => d.Products.OrderByDescending(off => off.Value).ThenBy(off => off.Amount),
                        ("value", true) => d.Products.OrderBy(off => off.Value).ThenBy(off => off.Amount),
                        _ => throw new InvalidOperationException()
                    }).ToArray()
                }).ToArray();
        }
    }

    private void ToggleSort(string field)
    {
        asc = !asc;
        sortBy = field;
    }
}
