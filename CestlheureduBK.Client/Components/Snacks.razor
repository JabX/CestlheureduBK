@inject IDataService dataService
@rendermode InteractiveWebAssembly

<PageTitle>C'est l'heure du BK ! - Rentabilité des snacks</PageTitle>

<h1>Rentabilité des snacks</h1>

<p>
    Restaurant : <strong>@Restaurant.Name</strong> (@Restaurant.Departement)<br />
    <em style="font-size:0.8em">Dernières mises à jour : catalogue le @ToLocalTime(Update.Catalogue) et offres le @ToLocalTime(Update.Offers)</em>
</p>
@foreach (var snack in Data)
{
    <h5>@snack.Name</h5>
    <table class="table">
        <thead>
            <tr style="white-space:nowrap">
                <th>Produit</th>
                <th class="toggle" @onclick="@(() => ToggleSort("amount"))">@(sortBy == "amount" ? asc ? "⬆️" : "⬇️" : "") <span>Nombre</span></th>
                <th class="toggle" @onclick="@(() => ToggleSort("price"))">@(sortBy == "price" ? asc ? "⬆️" : "⬇️" : "") <span>Prix</span></th>
                <th class="toggle" @onclick="@(() => ToggleSort("value"))">@(sortBy == "value" ? asc ? "⬆️" : "⬇️" : "") <span>Pièce</span></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in snack.Products)
            {
                <tr style="vertical-align:middle">
                    <td>
                        <span style="display:inline-flex;flex-wrap:wrap;align-items:center;gap:6px;">
                            <img src="@product.Image" width="100" />
                            <span style="display:inline-flex;flex-direction:column">
                                <span>@product.Name</span>
                            </span>
                        </span>
                    </td>
                    <td>@product.Amount</td>
                    <td>
                        <span style="display:inline-flex;flex-direction:column;align-items:flex-start">
                            <span style="white-space:nowrap">@product.Price.ToString("0.00 €")</span>
                            @if (product.Ratio < 1)
                            {
                                <span style="font-size:0.7em;font-style:italic">(compté @((product.Price * product.Ratio).ToString("0.00 €")))</span>
                            }
                        </span>
                    </td>
                    <td style="white-space:nowrap">@product.Value.ToString("0.00 €")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public required SnackDisplay[] Data { get; set; }

    [Parameter]
    public required RestaurantDisplay Restaurant { get; set; }

    [Parameter]
    public required UpdateDisplay Update { get; set; }

    private string sortBy = "value";
    private bool asc = true;

    private async Task ToggleSort(string field)
    {
        asc = !asc;
        sortBy = field;
        await LoadSnacks();
    }

    private async Task LoadSnacks()
    {
        Data = await dataService.GetSnacks(sortBy, asc);
    }

    private string ToLocalTime(DateTime? date)
    {
        if (date == null)
        {
            return string.Empty;
        }

        return TimeZoneInfo.ConvertTimeFromUtc(date.Value, TimeZoneInfo.FindSystemTimeZoneById("Europe/Paris"))
            .ToString("dd/MM/yyyy à HH:mm");
    }
}
